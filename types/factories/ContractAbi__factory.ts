/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.29.0
  Forc version: 0.32.2
  Fuel-Core version: 0.15.1
*/

import { Interface, Contract } from "fuels";
import type { Provider, BaseWalletLocked, AbstractAddress } from "fuels";
import type { ContractAbi, ContractAbiInterface } from "../ContractAbi";

const _abi = {
  "types": [
    {
      "typeId": 0,
      "type": "()",
      "components": [],
      "typeParameters": null
    },
    {
      "typeId": 1,
      "type": "[_; 3]",
      "components": [
        {
          "name": "__array_element",
          "type": 3,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 2,
      "type": "b256",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 3,
      "type": "struct Address",
      "components": [
        {
          "name": "value",
          "type": 2,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 4,
      "type": "struct ContractId",
      "components": [
        {
          "name": "value",
          "type": 2,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 5,
      "type": "u32",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 6,
      "type": "u64",
      "components": null,
      "typeParameters": null
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "burn_amount",
          "type": 6,
          "typeArguments": null
        },
        {
          "name": "a",
          "type": 5,
          "typeArguments": null
        }
      ],
      "name": "burn_coins",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      }
    },
    {
      "inputs": [
        {
          "name": "coins",
          "type": 6,
          "typeArguments": null
        },
        {
          "name": "asset_id",
          "type": 4,
          "typeArguments": null
        },
        {
          "name": "target",
          "type": 4,
          "typeArguments": null
        }
      ],
      "name": "force_transfer_coins",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      }
    },
    {
      "inputs": [
        {
          "name": "target",
          "type": 4,
          "typeArguments": null
        },
        {
          "name": "asset_id",
          "type": 4,
          "typeArguments": null
        }
      ],
      "name": "get_balance",
      "output": {
        "name": "",
        "type": 6,
        "typeArguments": null
      }
    },
    {
      "inputs": [],
      "name": "get_msg_amount",
      "output": {
        "name": "",
        "type": 6,
        "typeArguments": null
      }
    },
    {
      "inputs": [
        {
          "name": "mint_amount",
          "type": 6,
          "typeArguments": null
        },
        {
          "name": "a",
          "type": 5,
          "typeArguments": null
        }
      ],
      "name": "mint_coins",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      }
    },
    {
      "inputs": [
        {
          "name": "mint_amount",
          "type": 6,
          "typeArguments": null
        },
        {
          "name": "addresses",
          "type": 1,
          "typeArguments": null
        }
      ],
      "name": "mint_to_addresses",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      }
    },
    {
      "inputs": [
        {
          "name": "coins",
          "type": 6,
          "typeArguments": null
        },
        {
          "name": "asset_id",
          "type": 4,
          "typeArguments": null
        },
        {
          "name": "recipient",
          "type": 3,
          "typeArguments": null
        }
      ],
      "name": "transfer_coins_to_output",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      }
    }
  ],
  "loggedTypes": []
}

export class ContractAbi__factory {
  static readonly abi = _abi
  static createInterface(): ContractAbiInterface {
    return new Interface(_abi) as unknown as ContractAbiInterface
  }
  static connect(
    id: string | AbstractAddress,
    walletOrProvider: BaseWalletLocked | Provider
  ): ContractAbi {
    return new Contract(id, _abi, walletOrProvider) as unknown as ContractAbi
  }
}
