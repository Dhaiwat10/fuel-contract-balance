/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.29.0
  Forc version: 0.32.2
  Fuel-Core version: 0.15.1
*/

import type {
  Interface,
  FunctionFragment,
  DecodedValue,
  Contract,
  BytesLike,
  BigNumberish,
  InvokeFunction,
  BN,
} from 'fuels';

export type AddressInput = { value: string };
export type AddressOutput = AddressInput;
export type ContractIdInput = { value: string };
export type ContractIdOutput = ContractIdInput;

interface ContractAbiInterface extends Interface {
  functions: {
    burn_coins: FunctionFragment;
    force_transfer_coins: FunctionFragment;
    get_balance: FunctionFragment;
    get_msg_amount: FunctionFragment;
    mint_coins: FunctionFragment;
    mint_to_addresses: FunctionFragment;
    transfer_coins_to_output: FunctionFragment;
  };

  encodeFunctionData(functionFragment: 'burn_coins', values: [BigNumberish, BigNumberish]): Uint8Array;
  encodeFunctionData(functionFragment: 'force_transfer_coins', values: [BigNumberish, ContractIdInput, ContractIdInput]): Uint8Array;
  encodeFunctionData(functionFragment: 'get_balance', values: [ContractIdInput, ContractIdInput]): Uint8Array;
  encodeFunctionData(functionFragment: 'get_msg_amount', values: []): Uint8Array;
  encodeFunctionData(functionFragment: 'mint_coins', values: [BigNumberish, BigNumberish]): Uint8Array;
  encodeFunctionData(functionFragment: 'mint_to_addresses', values: [BigNumberish, [AddressInput, AddressInput, AddressInput]]): Uint8Array;
  encodeFunctionData(functionFragment: 'transfer_coins_to_output', values: [BigNumberish, ContractIdInput, AddressInput]): Uint8Array;

  decodeFunctionData(functionFragment: 'burn_coins', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'force_transfer_coins', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'get_balance', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'get_msg_amount', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'mint_coins', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'mint_to_addresses', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'transfer_coins_to_output', data: BytesLike): DecodedValue;
}

export class ContractAbi extends Contract {
  interface: ContractAbiInterface;
  functions: {
    burn_coins: InvokeFunction<[burn_amount: BigNumberish, a: BigNumberish], void>;
    force_transfer_coins: InvokeFunction<[coins: BigNumberish, asset_id: ContractIdInput, target: ContractIdInput], void>;
    get_balance: InvokeFunction<[target: ContractIdInput, asset_id: ContractIdInput], BN>;
    get_msg_amount: InvokeFunction<[], BN>;
    mint_coins: InvokeFunction<[mint_amount: BigNumberish, a: BigNumberish], void>;
    mint_to_addresses: InvokeFunction<[mint_amount: BigNumberish, addresses: [AddressInput, AddressInput, AddressInput]], void>;
    transfer_coins_to_output: InvokeFunction<[coins: BigNumberish, asset_id: ContractIdInput, recipient: AddressInput], void>;
  };
}
